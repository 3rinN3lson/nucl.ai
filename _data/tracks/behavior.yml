- title: "Late to the Party! A Story of Adding Player Bots to a Humans-Only Game"
  description: >
    Paragon is the latest MOBA game from Epic Games. Late in production a decision has been made to add player bots to support single-player and practice matches. The talk is going to describe how adding reasonable bot players to a game build around human players has been achieved. The approach taken consisted of both using stock UE4 AI parts as well as creating performant, game-specific AI subsystems, so there's going to be something interesting for everybody!
  speakers:
    - Mieszko Zielinski
  room: amphitheatre
  time:
    start: "14:15"
    finish: "15:00"

- title: "Seamless Merging of Behavior Trees and Imperative Code"
  description: >
    Behaviour Trees (BT) are a convenient pattern for implementing agents coordination logic. There are 2 common approaches for BT representation, either using a visual nodes builder or a specialised programming language. We are proponents of the latter. In our opinion, BT declarative syntax can be both expressive and powerful.
    In order to simplify BT coding we developed a specialised BeHaviour Language (BHL). BHL is a typed language which allows to mix both declarative BT style with familiar imperative programming style. In fact, BHL just adds a thin imperative gluing layer over a BT pattern. Apart from having a clear syntax BHL also helps to get rid of some drawbacks adherent to BT.
    This talk will include not only an introduction to BHL but also our usage experience alongside with best practices, tips and tricks.
  speakers:
    - Pavel Shevaev
  room: masterclass
  time:
    start: "15:00"
    finish: "15:45"

- title: "Bodyguards and VIPs: A Look at Ambient, Alert and Evacuation Behaviors in HITMAN"
  description: >
    In the latest instalment of the HITMAN series, contract targets are often high profile figures protected by their own personal security. To fit the fantasy and to provide new gameplay challenges, we've introduced a number of VIP and bodyguard behaviors to differentiate them from other NPCs.
    The talk will begin with an overview of the core HITMAN AI systems and the agent states we call situations. Providing an insight into what makes the inhabitants of HITMAN tick, before transitioning into the solutions undertaken to simulate the roles of bodyguards and VIPs within a dynamic environment.
    The talk will cover changes at the ambient and alert level, then delve into details on the various components that comprise the evacuation state: group coordination, group navigation, route evaluation, threat management and evacuation behaviours.
  speakers:
    - Jason Schroder
    - Thomas Petersen
  room: amphitheatre
  time:
    start: "17:15"
    finish: "18:00"

- title: "Shooting for DataDriven&sup2;! Evolution of a Modular Weapon System"
  description: >
    When building gameplay systems flexibility and simplicity are king. In this talk we will present a full slice of a modular weapon system from a programmer point of view, showing how classic AI techniques can be used in unconventional grounds and introducing the new Action Trees and the DataDriven&sup2; paradigm. Attendees will leave with a practical example on how to evolve a system while keeping your building blocks simple to reach quick iterations, fast feature creation, real-time tweaks and improved data scalability when the game goes big.
  speakers:
    - Ramon Viladomat
  room: masterclass
  time:
    start: "11:30"
    finish: "12:00"

- title: "Back-Alley Surgery For Cyberpunk AI"
  description: >
    In our upcoming cyberpunk tactical shooter, Static Sky, the AI is focused on just two things: making the player earn the win, and behaving believably while doing it. In this talk, we’ll cut open few seconds of gameplay and scoop out all of the individual agent logic and group coordination bits so that we can see how they work. What will we find when we start digging around? Reusable hybrid behavior trees partially shared across agents? Tactical pathfinding using old-school influence maps?  An inexplicable fondness for mixing named arguments and anonymous methods? There’s really only one way to find out! When we’re done, we’ll stuff it all back in, sew it up, and nobody will even know we were here.
  speakers:
    - Charles Hinshaw
  room: masterclass
  time:
    start: "09:15"
    finish: "10:00"

- title: "How TOM CLANCY'S THE DIVISION Simulates Manhattan for Millions of Players"
  description: >
    TOM CLANCY'S THE DIVISION throws players into a mid-crisis Manhattan in the aftermath of a devastating pandemic, blending online RPG and third person shooter mechanics in both open world and scripted levels. Hosting the game on dedicated servers was essential for providing a seamless online experience.
    This presentation describes how the NPC behaviors and animation systems have been designed for this client-server architecture and examines the implications for game design, development and production.
    Covered topics include: the challenges of having different physics and animation representations on the client and server, NPC reactions and behaviors, CPU and memory budgets, debugging server-side behaviors, and how this architecture affected production both prior-to and after launch.
  speakers:
    - Philip Dunstan
  room: amphitheatre
  time:
    start: "10:00"
    finish: "10:45"

- title: "Production Issues Support Group and Behavior Logic Clinic [Roundtable]"
  speakers:
    - Emil Johansen
  room: laboratories
  time:
    start: "12:00"
    finish: "12:45"

- title: "Branching Out: Applying Behavior Logic throughout the Codebase [Roundtable]"
  speakers:
    - Emil Johansen
  room: laboratories
  time:
    start: "16:30"
    finish: "17:15"

# - title: "CANCELLED — Time Traveling Debuggers for Agent-based Games"
#   description: >
#     *TALK HAS BEEN CANCELLED* In 2012, Bret Victor's talk "Inventing on Principle" showed the ideal future of debugging: time travel. Being able to scrub through all the past states of your program, fix the bug, hot-reload the code and see the change applied to all the past states as well.
#     Since then, only one implementation of it has appeared, for Elm, a Functional Reactive Programming language.
#     The principles of FRP make Time Travelling debuggers much cheaper to implement, making them viable for actual game development.
#     In this talk we'll look at what concepts it takes to implement one in Erlang, and how to use them to make agent-based games.
#   speakers:
#     - Claudia Doppioslash
  # room: masterclass
  # time:
  #   start: "11:30"
  #   finish: "12:00"
