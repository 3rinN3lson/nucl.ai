
#- title: "Not Just Planning: STRIPs for Ambient NPC Interactions in Final Fantasy XV"
#  description: >
#    Ambient characters are part of many current game titles. Yet, the intrinsic necessity and difficulty to model interactions of these characters with the environment and with each other is not easily overcome. The well-known smart object semantics introduced in The Sims has been widely adapted for its flexibility and scalability. However, classic smart objects lack the ability to deal with multiple characters, and thus are not adequate to fully bring characters to life.
#    We present an interaction-centric approach, in which smart objects instruct multiple characters by means of adaptive scripts formulated based on STRIPs-like rules. Instead of inferring possible world-states as is done in planning, the rules are used to communicate changed attitudes and circumstances between characters via a blackboard. The resulting scripting language constitutes a simple yet powerful way to express multi-character interactions situated in the environment.
#    This approach has been employed to model ambient interactions in Final Fantasy XV: Episode Duscae and is being extended for Final Fantasy XV. Drawing examples from this game, we show the flexibility and expressiveness of the resulting scripting system.
#  speakers:
#    - Hendrik Skubch
#  room: amphitheatre
#  time:
#    start: "17:00"
#    finish: "17:45"

- title: "Introduction to BeHavior Language (Evolution of practical BT application)"
  description: >
    Behaviour Trees(BT) is a convenient pattern for implementing agents coordination logic. There are 2 common approaches for BT representation, either using a visual nodes builder or a specialised programming language. We are proponents of the latter. In our opinion, BT declarative syntax can be both expressive and powerful.
    In order to simplify BT coding we developed a specialised BeHaviour Language(BHL). BHL is a typed language which allows to mix both declarative BT style with familiar imperative programming style. In fact, BHL just adds a thin imperative gluing layer over a BT pattern. Apart from having a clear syntax BHL also helps to get rid of some drawbacks adherent to BT.
    This talk will include not only an introduction to BHL but also our usage experience alongside with best practices, tips and tricks.
  room: masterclass
